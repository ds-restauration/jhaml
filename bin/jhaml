#!/usr/bin/env node
'use strict'
const args = require('minimist')(process.argv.slice(2))
const Parser = require('../lib/Parser.js')
const fs = require('fs')
const Javascript = require('../lib/engines/Javascript.js')

if(args.help || args.h) {
  let stream = fs.createReadStream(`${__dirname}/jhaml.txt`)
  stream.pipe(process.stdout)
  stream.on('end', () => process.exit(0))
  return
}

let Push = require('../lib/engines/Push.js')

let jsonScope = ''
let output = process.stdout
let scope = null

if(args._[1]) {
  scope = JSON.parse(args._[1])
  output = args._[0]
} else if(args._[0]) {
  try {
    scope = JSON.parse(args._[0])
  } catch (e) {}

  if(scope === null)
    output = args._[0]
}

let e = args.eval !== undefined ? args.eval : true
let hamltohtml = new Parser({engine: new Javascript({eval: e})}, scope || {})

process.stdin.setEncoding('utf8')

process.stdin
.pipe(hamltohtml)
.pipe(output)
